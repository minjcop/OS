Binary files ./xv6-pnu-p2/201524404-p2.tar.gz and ./xv6-pnu-p2-201524404/201524404-p2.tar.gz differ
diff -urN ./xv6-pnu-p2/Makefile ./xv6-pnu-p2-201524404/Makefile
--- ./xv6-pnu-p2/Makefile	2019-04-04 13:20:47.000000000 +0900
+++ ./xv6-pnu-p2-201524404/Makefile	2020-04-29 21:33:43.278443929 +0900
@@ -181,6 +181,12 @@
 	_usertests\
 	_wc\
 	_zombie\
+	_test\
+	_test2\
+	_test3\
+	_test4\
+	_test5\
+	_minitop\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
Binary files ./xv6-pnu-p2/_ps and ./xv6-pnu-p2-201524404/_ps differ
diff -urN ./xv6-pnu-p2/defs.h ./xv6-pnu-p2-201524404/defs.h
--- ./xv6-pnu-p2/defs.h	2019-04-04 11:16:13.000000000 +0900
+++ ./xv6-pnu-p2-201524404/defs.h	2020-04-29 13:46:13.772321731 +0900
@@ -120,6 +120,10 @@
 int             wait(void);
 void            wakeup(void*);
 void            yield(void);
+// fixed by project#2
+int 			setnice(int pid, int nice);
+int 			getnice(int pid);
+void 			ps(int pid);
 
 // swtch.S
 void            swtch(struct context**, struct context*);
diff -urN ./xv6-pnu-p2/minitop.c ./xv6-pnu-p2-201524404/minitop.c
--- ./xv6-pnu-p2/minitop.c	1970-01-01 09:00:00.000000000 +0900
+++ ./xv6-pnu-p2-201524404/minitop.c	2020-04-29 21:41:25.564499925 +0900
@@ -0,0 +1,10 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+
+int main(int argc, char *argv[]){
+	int pid;
+	pid = fork();
+	ps(pid);	
+	exit();
+}
diff -urN ./xv6-pnu-p2/proc.c ./xv6-pnu-p2-201524404/proc.c
--- ./xv6-pnu-p2/proc.c	2019-04-04 11:16:13.000000000 +0900
+++ ./xv6-pnu-p2-201524404/proc.c	2020-04-29 22:05:30.301396410 +0900
@@ -88,7 +88,8 @@
 found:
   p->state = EMBRYO;
   p->pid = nextpid++;
-
+  // fixed by project#2
+  p->nice = 20; // default priority
   release(&ptable.lock);
 
   // Allocate kernel stack.
@@ -319,23 +320,38 @@
 //  - swtch to start running that process
 //  - eventually that process transfers control
 //      via swtch back to the scheduler.
+
+// project#2
 void
 scheduler(void)
 {
   struct proc *p;
+  struct proc *p1;
+
   struct cpu *c = mycpu();
   c->proc = 0;
   
   for(;;){
     // Enable interrupts on this processor.
     sti();
-
+	
+	struct proc *pr; // priority check
     // Loop over process table looking for process to run.
     acquire(&ptable.lock);
     for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
       if(p->state != RUNNABLE)
         continue;
 
+	  pr = p;
+
+	  for(p1 = ptable.proc; p1 < &ptable.proc[NPROC]; p1++){
+	  	if(p1->state != RUNNABLE)
+			continue;
+		if(pr->nice > p1->nice)
+			pr = p1;
+	  }
+	  p = pr;
+
       // Switch to chosen process.  It is the process's job
       // to release ptable.lock and then reacquire it
       // before jumping back to us.
@@ -532,3 +548,75 @@
     cprintf("\n");
   }
 }
+
+// fixed by project#2
+int setnice(int pid, int nice){
+	struct proc *p;
+		
+	//acquire(&ptable.lock);
+	if(nice < 0 || nice > 40)
+		return -1;
+	for(p = ptable.proc; p < &ptable.proc[NPROC]; ++p){
+		if(p->pid == pid){
+			p->nice = nice;
+			return 0;
+		}	
+	}
+	//release(&ptable.lock);
+	return -1;
+}
+
+int getnice(int pid){
+	struct proc *p;
+
+	acquire(&ptable.lock);
+	for(p = ptable.proc; p < &ptable.proc[NPROC]; ++p){
+		if(p->pid == pid){
+			return p->nice;
+		}
+	}
+	release(&ptable.lock);
+
+	return -1;
+}
+void ps(int pid){
+	struct proc *p; 
+
+	acquire(&ptable.lock);
+	cprintf("pid \t ppid \t nice \t status \t name \n");
+	if(pid == 0){
+		for(p = ptable.proc; p < &ptable.proc[NPROC]; ++p){
+			if(p->pid == 1)
+				p->parent->pid = 1;
+			if(p->state == SLEEPING)
+				cprintf("%d \t %d \t %d \t SLEEPING \t %s \n",  // parent - ppid
+					p->pid, p->parent->pid, p->nice, p->name);
+			else if(p->state == RUNNABLE)
+				cprintf("%d \t %d \t %d \t RUNNABLE \t %s \n",  // parent - ppid
+					p->pid, p->parent->pid, p->nice, p->name);	
+			else if(p->state == RUNNING)
+				cprintf("%d \t %d \t %d \t RUNNING \t %s \n",  // parent - ppid
+					p->pid, p->parent->pid, p->nice, p->name);
+		}
+	}else{
+		for(p = ptable.proc; p < &ptable.proc[NPROC]; ++p){
+			if(pid == p->pid){
+				if(p->pid == 1)
+					p->parent->pid = 1;
+				if(p->state == SLEEPING)
+					cprintf("%d \t %d \t %d \t SLEEPING \t %s \n", 
+						p->pid, p->parent->pid, p->nice, p->name);
+				else if(p->state == RUNNABLE)
+					cprintf("%d \t %d \t %d \t RUNNABLE \t %s \n",
+						p->pid, p->parent->pid, p->nice, p->name);
+				else if(p->state == RUNNING)
+					cprintf("%d \t %d \t %d \t RUNNING \t %s \n", 
+						p->pid, p->parent->pid, p->nice, p->name);
+			}
+		}
+	}
+	release(&ptable.lock);
+}
+
+
+
diff -urN ./xv6-pnu-p2/proc.h ./xv6-pnu-p2-201524404/proc.h
--- ./xv6-pnu-p2/proc.h	2019-04-04 11:16:13.000000000 +0900
+++ ./xv6-pnu-p2-201524404/proc.h	2020-04-29 21:53:13.730404990 +0900
@@ -49,6 +49,7 @@
   struct file *ofile[NOFILE];  // Open files
   struct inode *cwd;           // Current directory
   char name[16];               // Process name (debugging)
+  int nice;		// 0 ~ 40 nice value  fixed by project#2
 };
 
 // Process memory is laid out contiguously, low addresses first:
diff -urN ./xv6-pnu-p2/setnice.c ./xv6-pnu-p2-201524404/setnice.c
--- ./xv6-pnu-p2/setnice.c	1970-01-01 09:00:00.000000000 +0900
+++ ./xv6-pnu-p2-201524404/setnice.c	2020-04-29 13:55:42.635154277 +0900
@@ -0,0 +1,22 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+#include "fcntl.h"
+
+int main(int argc, char *argv[]){
+	int pid;
+	int nice;
+
+	if(argc < 3){ // ?
+		return -1;
+	}
+	pid = atoi(argv[1]);
+	nice = atoi(argv[2]);
+	if(nice < 0 || nice > 40){
+		printf(2, "Invalid!! nice_value range : 0 ~ 40\n");
+		return -1;
+	}
+	printf(1, "pid = %d, nice_value = %d\n", pid, nice);
+	setnice(pid, nice);
+	return 0;
+}
diff -urN ./xv6-pnu-p2/swtch.S ./xv6-pnu-p2-201524404/swtch.S
--- ./xv6-pnu-p2/swtch.S	2019-04-04 11:16:13.000000000 +0900
+++ ./xv6-pnu-p2-201524404/swtch.S	2020-04-29 12:26:48.520638940 +0900
@@ -8,8 +8,8 @@
 
 .globl swtch
 swtch:
-  movl 4(%esp), %eax
-  movl 8(%esp), %edx
+  movl 4(%esp), %eax // old(c->schedule) -> %eax
+  movl 8(%esp), %edx // new(p->context) -> %edx
 
   # Save old callee-saved registers
   pushl %ebp
@@ -18,12 +18,12 @@
   pushl %edi
 
   # Switch stacks
-  movl %esp, (%eax)
-  movl %edx, %esp
+  movl %esp, (%eax) // old(%esp) -> c->schedule
+  movl %edx, %esp // p->context -> new(%esp)
 
   # Load new callee-saved registers
   popl %edi
   popl %esi
   popl %ebx
   popl %ebp
-  ret
+  ret // jump -> new process
diff -urN ./xv6-pnu-p2/syscall.c ./xv6-pnu-p2-201524404/syscall.c
--- ./xv6-pnu-p2/syscall.c	2019-04-04 11:17:39.000000000 +0900
+++ ./xv6-pnu-p2-201524404/syscall.c	2020-04-29 20:00:00.908305062 +0900
@@ -104,6 +104,9 @@
 extern int sys_write(void);
 extern int sys_uptime(void);
 extern int sys_yield(void);
+extern int sys_setnice(void);
+extern int sys_getnice(void);
+extern int sys_ps(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -128,6 +131,9 @@
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
 [SYS_yield]   sys_yield,
+[SYS_setnice] sys_setnice,
+[SYS_getnice] sys_getnice,
+[SYS_ps]	  sys_ps,
 };
 
 void
diff -urN ./xv6-pnu-p2/syscall.h ./xv6-pnu-p2-201524404/syscall.h
--- ./xv6-pnu-p2/syscall.h	2019-04-04 11:18:03.000000000 +0900
+++ ./xv6-pnu-p2-201524404/syscall.h	2020-04-29 13:31:25.092358160 +0900
@@ -21,3 +21,6 @@
 #define SYS_mkdir  20
 #define SYS_close  21
 #define SYS_yield  22
+#define SYS_setnice 23
+#define SYS_getnice 24
+#define SYS_ps 25
diff -urN ./xv6-pnu-p2/sysproc.c ./xv6-pnu-p2-201524404/sysproc.c
--- ./xv6-pnu-p2/sysproc.c	2019-04-04 11:19:03.000000000 +0900
+++ ./xv6-pnu-p2-201524404/sysproc.c	2020-04-29 16:41:45.629729378 +0900
@@ -97,3 +97,31 @@
   return 0;
 }
 
+// fixed by project#2
+int
+sys_setnice(void)
+{
+	int pid = 0;
+	int nice = 20;
+	// ?
+	setnice(pid, nice);
+	return 0;
+}
+
+int
+sys_getnice(void)
+{
+	int pid = 0;
+	getnice(pid);
+	return 0;
+}
+
+int
+sys_ps(void)
+{
+	int pid = 0;
+	ps(pid);
+	return 0;
+}
+
+
diff -urN ./xv6-pnu-p2/test.c ./xv6-pnu-p2-201524404/test.c
--- ./xv6-pnu-p2/test.c	1970-01-01 09:00:00.000000000 +0900
+++ ./xv6-pnu-p2-201524404/test.c	2020-04-29 21:09:10.989451000 +0900
@@ -0,0 +1,37 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+
+int main(int argc, char **argv){
+	int pid1;
+	int pid2;
+	int mypid;
+
+	setnice(1, 19);
+	setnice(getpid(), 2);
+
+	pid1 = fork();
+
+	if(pid1 == 0){
+		printf(1, "##### State 4 #####\n");
+	}
+	else{
+		setnice(pid1, 10);
+		printf(1, "##### State 1 #####\n");
+	
+		pid2 = fork();
+
+		if(pid2 == 0){
+			printf(1, "##### State 3 #####\n");
+		}
+		else{
+			setnice(pid2, 5);
+			printf(1, "##### State 2 #####\n");
+		}
+	}
+
+	mypid = getpid();
+	printf(1, "PID %d is finished\n", mypid);
+
+	exit();
+}
diff -urN ./xv6-pnu-p2/test1.c ./xv6-pnu-p2-201524404/test1.c
--- ./xv6-pnu-p2/test1.c	2019-04-04 13:16:27.000000000 +0900
+++ ./xv6-pnu-p2-201524404/test1.c	1970-01-01 09:00:00.000000000 +0900
@@ -1,38 +0,0 @@
-#include "types.h"
-#include "stat.h"
-#include "user.h"
-
-int main(int argc, char **argv){
-	int pid1;
-	int pid2;
-	int mypid;
-
-	setnice(1, 19);
-	setnice(getpid(), 2);
-
-	pid1 = fork();
-
-	if(pid1 == 0){	//Child
-		printf(1, "##### State 4 #####\n");
-	}
-	else{			//Parent
-		setnice(pid1, 10);
-		printf(1, "##### State 1 #####\n");
-
-		pid2 = fork();
-
-		if(pid2 == 0){	//Grand-Child
-			printf(1, "##### State 3 #####\n");
-		}
-		else{			//Parent
-			setnice(pid2, 5);
-			printf(1, "##### State 2 #####\n");
-		}
-	}
-
-	mypid = getpid();
-	printf(1, "PID %d is finished\n", mypid);
-
-	exit();
-}
-
diff -urN ./xv6-pnu-p2/test2.c ./xv6-pnu-p2-201524404/test2.c
--- ./xv6-pnu-p2/test2.c	2019-04-04 13:16:27.000000000 +0900
+++ ./xv6-pnu-p2-201524404/test2.c	2020-04-29 21:30:49.470398336 +0900
@@ -23,7 +23,6 @@
 
 	mypid = getpid();
 	printf(1, "PID %d is finished\n", mypid);
-
 	exit();
 }
 
diff -urN ./xv6-pnu-p2/user.h ./xv6-pnu-p2-201524404/user.h
--- ./xv6-pnu-p2/user.h	2019-04-04 11:19:50.000000000 +0900
+++ ./xv6-pnu-p2-201524404/user.h	2020-04-29 13:35:39.468171647 +0900
@@ -24,6 +24,9 @@
 int sleep(int);
 int uptime(void);
 void yield(void);
+int setnice(int pid, int nice);
+int getnice(int pid);
+int ps(int pid);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff -urN ./xv6-pnu-p2/usys.S ./xv6-pnu-p2-201524404/usys.S
--- ./xv6-pnu-p2/usys.S	2019-04-04 11:25:04.000000000 +0900
+++ ./xv6-pnu-p2-201524404/usys.S	2020-04-29 13:35:51.704167723 +0900
@@ -30,3 +30,6 @@
 SYSCALL(sleep)
 SYSCALL(uptime)
 SYSCALL(yield)
+SYSCALL(setnice)
+SYSCALL(getnice)
+SYSCALL(ps)
